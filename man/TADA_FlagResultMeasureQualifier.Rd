% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ResultFlagsDependent.R
\name{TADA_FlagResultMeasureQualifier}
\alias{TADA_FlagResultMeasureQualifier}
\title{Check for results with suspect Result Measure Qualifier Codes}
\usage{
TADA_FlagResultMeasureQualifier(.data, clean = FALSE, errorsonly = FALSE)
}
\arguments{
\item{.data}{TADA dataframe which must include the column 'MeasureQualifierCode'}

\item{clean}{Boolean argument with options "TRUE" or "FALSE". The default is
clean = "FALSE" which does not remove any rows of data. When clean = "TRUE",
any rows of data flagged as "a Quality Control sample "SUSPECT" will be removed.}

\item{errorsonly}{Boolean argument; the default is errorsonly = FALSE. When
errorsonly = TRUE, the function will filter the dataframe to show only the
rows of data flagged as Quality Control samples.}
}
\value{
This function adds the column "TADA.ResultMeasureQualifier.Flag" to the dataframe
which flags quality control samples based on the "MeasureQualifierCode" column. When
clean = "FALSE", all flagged data are kept in the dataframe. When clean = "TRUE",
all flagged data are removed from the dataframe. When errorsonly = TRUE, the dataframe
is filtered to show only the flagged data. When errorsonly = FALSE, the full,
cleaned dataframe is returned. The default is clean = "none" and errorsonly = FALSE.
}
\description{
This function checks for and flags or removes samples denoted as suspect
based on the 'MeasureQualifierCode' column. The function will flag
suspect samples as "SUSPECT" and passing samples as "PASS".
}
\examples{
# Load example dataset:
data(Data_Nutrients_UT)

# Flag and keep all QC samples:
MeasureQualifierCode_flagged <- TADA_FlagResultMeasureQualifier(Data_Nutrients_UT)

# Flag QC samples and filter to flagged data only:
MeasureQualifierCode_flags_only <- TADA_FlagResultMeasureQualifier(Data_Nutrients_UT, errorsonly = TRUE)

# Remove all QC samples:
MeasureQualifierCode_clean <- TADA_FlagResultMeasureQualifier(Data_Nutrients_UT, clean = TRUE)
}
